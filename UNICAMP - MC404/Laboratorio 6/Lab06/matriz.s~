      .text
      .align 4
      .global	mm
      .type	mm, %function
mm:

for_linhas:
      MOV r9, #0
      STR r9, contador_colunas_B

for_colunas_B:
      STR r9, contador_colunas_A
      STR r9, valor_auxiliar

for_colunas_A:

      MOV r7, contador_colunas_A
      MOV r8, contador_colunas_B
      MLA r9, r7, r5 ,r8		@ r9 = n_linhasB * contadorColunasA + contadorColunasB
      MOV r9, r9, LRL #2		@ r9 = 4*r9

      MOV r7, contador_colunas_A	@ r7 = contador_colunas_A
      MOV r8, contador_linhas_A
      MLA r8, r8, r3 ,r7		@ r8 = n_linhasA * contador_LinhasA + contadorColunasA
      MOV r8, r8, LRL #2		@ r8 = 4 * r8

      MUL r7, [r1, r8], [r2, r9]  	@ r7 = A[contadorLinhasA][contadorColunasA] X B[contadorColunasA][contadorColunasB]
      
      MOV r8, valor_auxiliar
      ADD r7, r7, r8

      STR r7, valor_auxiliar		@ guarda resultado parcial

      MOV r9, contador_colunas_A
      ADD r9, r9, #1
      STR r9, contador_colunas_A
      CMP r9, r6
      BLT for_colunas_A      

@----
      MOV r8, contador_linhas_A
      MOV r9, contador_colunas_B	
      MLA r9, r8, r3, r9		@ r9 = contadorLinhasA * n_linhasA + contadorcolunasB
      MOV r9, r9, LSL #2		@ r9 = 4 * r9

      MOV r8, valor_auxiliar
      STR r8, [r0, r9]
@-----
    
      MOV r9, contador_colunas_B
      ADD r9, r9, #1
      STR r9, contador_colunas_B
      CMP r9, r4
      BLT for_colunas_B

      MOV r9, contador_linhas_A
      ADD r9, r9, #1
      STR r9, contador_linhas_A
      CMP r9, r3
      BLT for_linhas

contador_linhas_A: .word 0
contador_colunas_A: .word 0
contador_colunas_B: .word 0
valor_auxiliar: .word 0
 