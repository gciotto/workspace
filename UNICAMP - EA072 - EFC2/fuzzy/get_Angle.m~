function angle = get_Angle (active_rules)


available_angles = -20:0.5:20;
c_values = zeros (5, length(available_angles));

parameters = [ -20 -20 -15 -10 0 ;
               -15 -10  -5   0 0 ;
               -5    0   0   5 0 ;
                0    5  10  15 0 ;
                10  15  20  20 0 ];

for k = 1: length(available_angles)
    
    for n = 1:5
    
        c_values(n, k) = min (active_rules(n), trap_pertinencia(available_angles(k), ...
            parameters(n ,1), 
    end
    
end

available_angles_PN = -20:0.5:20;
c_value_PN = zeros (1, length(available_angles_PN));
for k = 1: length(available_angles_PN)
    
    c_value_PN(k) = min (active_rules(2), trap_pertinencia(available_angles_PN(k), -15,-10, -5,-0, 0);
    
end


available_angles_Z = -20:0.5:20;
c_value_Z = zeros (1, length(available_angles_Z));
for k = 1: length(available_angles_Z)
    
    c_value_Z(k) = min (active_rules(3), trap_pertinencia(available_angles_Z(k), -5, 0, 0, 5, 0));
    
end


available_angles_PP = -20:0.5:20;
c_value_PP = zeros (1, length(available_angles_PP));
for k = 1: length(available_angles_PP)
    
    c_value_PP(k) = min (active_rules(4), trap_pertinencia(available_angles_PP(k), 0, 5, 10, 15, 0));
    
end

available_angles_MP = -20:0.5:20;
c_value_MP = zeros (1, length(available_angles_MP));
for k = 1: length(available_angles_MP)
    
    c_value_MP(k) = min (active_rules(5), trap_pertinencia(available_angles_PP(k), 10, 15, 20, 20, 0));
    
end


c_value = zeros (1

end