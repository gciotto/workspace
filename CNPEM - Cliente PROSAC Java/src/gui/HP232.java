package gui;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Arrays;

import javax.swing.BorderFactory;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.SwingConstants;

import main.Board;

public class HP232 extends javax.swing.JPanel implements IBoard {

	private Board board;
	
	public HP232() {
		initComponents();
	}
	
	@Override
	public void refresh() {
		
		if(board == null)
            return;
        
        int[] readBytes = board.getReadBytes();
        int[] writeBytes = board.getWriteBytes();
        
        String measure = "Measure = ";
        for (int i = 2; i < readBytes.length; i++)
        	measure += (char) readBytes[i];
        
        this.txtMeasure.setText(measure);

        /* HP232 cannot cycle, thus flag must be 128 (0x80) */
        writeBytes[0] = 0;        
        writeBytes[1] = 0x80;
        
        if (this.chbReset.isSelected())
        	writeBytes[2] = Integer.valueOf((String)this.comboAdjust.getSelectedItem());

	}

	@Override
	public void setBoard(Board b) {
        
		this.board = b;
        
        if(b == null)
            this.setVisible(false);
        else {
        	
            txtName.setText(b.getModule().name);
            txtPosition.setText(String.valueOf(b.getPosition()));
            this.setVisible(true);
        }

	}

	@Override
	public String getPosition() {
		return txtPosition.getText();
	}

	@Override
	public void setPosition(String p) {
		txtPosition.setText(p);
	}
	
    /**
     * Code generated by NetBeans window editor.
     */
    @SuppressWarnings("unchecked")                          
    private void initComponents() {

        txtName = new JLabel();
        txtPosition = new JLabel();
        txtMeasure = new JLabel("aqui");
        
        chbReset = new JCheckBox("Reset");
        chbReset.setHorizontalAlignment(SwingConstants.CENTER);
        
        String[] petStrings = {"1", "10", "100"};
        comboAdjust = new JComboBox(petStrings);
        comboAdjust.setSelectedIndex(0);
        
        setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        txtName.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        txtName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtName.setText("HP232");

        txtPosition.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N
        txtPosition.setText("99");
        txtPosition.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        
        txtMeasure.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        txtMeasure.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        setLayout(new BorderLayout());
        
        JPanel title = new JPanel();
        title.setLayout(new BorderLayout());
        title.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
        
        title.add(txtPosition, BorderLayout.EAST);
        title.add(txtName, BorderLayout.CENTER);
        
        this.add(title, BorderLayout.NORTH);
        
        JPanel data = new JPanel();
        data.setLayout(new GridLayout(6,3, 10, 10));
        data.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
        
        JPanel reset = new JPanel();
        reset.setLayout(new GridLayout(0, 2, 5 ,5));
        
        data.add(txtMeasure);
        reset.add(chbReset);
        reset.add(comboAdjust);
        
        data.add(reset);
        
        this.add(data, BorderLayout.CENTER);
        
       
    }// </editor-fold>                        

    /* Variables declaration - do not modify */                     
    private JLabel txtName, txtPosition, txtMeasure;
    private JCheckBox chbReset;
    private JComboBox comboAdjust;

}
